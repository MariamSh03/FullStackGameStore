// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250310170948_OrderEntity")]
    partial class OrderEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c362962-0044-43d7-be43-a8dda3b5871f"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("ebd1868c-f848-4bd7-83b0-3bc222a0d1b8"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("36a5f673-7632-448b-9fc9-8bbee42bd57e"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("c523a190-26e0-4731-85bf-a46c28645cc8"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("7900d574-8f10-4b60-b5fe-7ee84a2c3b93"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("ab5758f5-8b9d-4b3f-909a-f46ac919a203"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("650b24b9-c996-4ff6-85fe-b07cf5b024ab"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("7edfd4e6-51a6-4d00-8ae6-8df63cba5847"),
                            Name = "RTS",
                            ParentGenreId = new Guid("4c362962-0044-43d7-be43-a8dda3b5871f")
                        },
                        new
                        {
                            Id = new Guid("15e5a8b5-7f03-4716-b6ac-272d13e2219f"),
                            Name = "TBS",
                            ParentGenreId = new Guid("4c362962-0044-43d7-be43-a8dda3b5871f")
                        },
                        new
                        {
                            Id = new Guid("34a3c1a7-2004-428e-a5f8-b1051d7a085e"),
                            Name = "Rally",
                            ParentGenreId = new Guid("c523a190-26e0-4731-85bf-a46c28645cc8")
                        },
                        new
                        {
                            Id = new Guid("b1c98338-848c-46ee-97f0-9640cee28df5"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("c523a190-26e0-4731-85bf-a46c28645cc8")
                        },
                        new
                        {
                            Id = new Guid("ed0874ba-6067-4e83-b45a-043618f5575a"),
                            Name = "Formula",
                            ParentGenreId = new Guid("c523a190-26e0-4731-85bf-a46c28645cc8")
                        },
                        new
                        {
                            Id = new Guid("6948d794-d33d-4fdb-8eae-77b290348a2f"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("c523a190-26e0-4731-85bf-a46c28645cc8")
                        },
                        new
                        {
                            Id = new Guid("3dc11065-48ab-40de-8f75-ffaa6a508f34"),
                            Name = "FPS",
                            ParentGenreId = new Guid("7900d574-8f10-4b60-b5fe-7ee84a2c3b93")
                        },
                        new
                        {
                            Id = new Guid("e8b5e9a3-3eac-4778-8cf6-7637d92b0fa7"),
                            Name = "TPS",
                            ParentGenreId = new Guid("7900d574-8f10-4b60-b5fe-7ee84a2c3b93")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("316f85c6-8cc4-408e-b85d-515da326325f"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("2e5d8ae0-9d0a-4e07-ab2b-6abcbf4d93af"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("a5426a23-a715-455b-b5ed-7166f72e9264"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("e4cedd08-819c-42ea-b902-5aa97c343d2b"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
