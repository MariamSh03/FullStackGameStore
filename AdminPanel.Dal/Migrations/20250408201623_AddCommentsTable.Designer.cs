// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250408201623_AddCommentsTable")]
    partial class AddCommentsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.CommentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentCommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("750e31ff-ba3b-4d0d-9745-9227a30f7fa4"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("13208af4-f67c-4f6c-abda-896dce2f06cc"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("c74c6fa0-214a-4eee-b872-de844df2905f"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("0f9d5798-8f49-4400-b6bc-428eb5bbf2f4"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("8c4424e3-20cc-4910-ac28-de77315f7645"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("fa335d4c-3d6e-4b39-a188-87a2a3f67724"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("d80f1f6a-3e61-4700-b899-f564024e5617"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("51006abd-4462-4e06-acb9-4ffd1836504a"),
                            Name = "RTS",
                            ParentGenreId = new Guid("750e31ff-ba3b-4d0d-9745-9227a30f7fa4")
                        },
                        new
                        {
                            Id = new Guid("13caa215-a095-431f-a569-73ece301c7cd"),
                            Name = "TBS",
                            ParentGenreId = new Guid("750e31ff-ba3b-4d0d-9745-9227a30f7fa4")
                        },
                        new
                        {
                            Id = new Guid("db6ababe-b372-41d8-8d4a-fc9cac89237a"),
                            Name = "Rally",
                            ParentGenreId = new Guid("0f9d5798-8f49-4400-b6bc-428eb5bbf2f4")
                        },
                        new
                        {
                            Id = new Guid("80918149-2f6d-4aad-a94b-2bd70690d07d"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("0f9d5798-8f49-4400-b6bc-428eb5bbf2f4")
                        },
                        new
                        {
                            Id = new Guid("26e97eab-86b2-4a19-8ca7-001ec0f0347e"),
                            Name = "Formula",
                            ParentGenreId = new Guid("0f9d5798-8f49-4400-b6bc-428eb5bbf2f4")
                        },
                        new
                        {
                            Id = new Guid("7a54dfff-8b76-41cb-86af-4f0917321422"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("0f9d5798-8f49-4400-b6bc-428eb5bbf2f4")
                        },
                        new
                        {
                            Id = new Guid("439dddb9-0fbf-4f3c-ab21-0440d7d9043d"),
                            Name = "FPS",
                            ParentGenreId = new Guid("8c4424e3-20cc-4910-ac28-de77315f7645")
                        },
                        new
                        {
                            Id = new Guid("5ba346d6-0731-46dd-bcd9-b7e121fc0295"),
                            Name = "TPS",
                            ParentGenreId = new Guid("8c4424e3-20cc-4910-ac28-de77315f7645")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderGameEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderGames");
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("883be2b5-b860-42ac-9ff8-e7868db91a20"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("6a22f90d-ce8a-4883-a870-35b7aac9594c"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("82fb2171-7e3a-48a8-86e8-13c2961ffbd3"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("5a26768b-dbd7-40c5-9219-808afa6a956c"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("AdminPanel.Entity.CommentEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.CommentEntity", null)
                        .WithMany()
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderGameEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.OrderEntity", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
