// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250211183943_AddUniqueConstraintToPublisher")]
    partial class AddUniqueConstraintToPublisher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("887921a6-efbc-4003-9c66-0b07452ee293"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("468b66e1-d113-4fed-b2ac-cc3ebe6eaea9"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("e77cc1b1-c329-44f2-8629-018d63755b98"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("d2e3bc4b-8e93-4f64-933b-6ecc0ab7c1bc"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("241bd8b3-def4-4248-9255-bdfa8858c438"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("b543fc39-acb1-45d3-9244-7bf86e6807ab"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("b8f514b2-e2ed-4644-b1b9-20af6374d6fa"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("69673772-1931-4edb-9a05-488f63d13d39"),
                            Name = "RTS",
                            ParentGenreId = new Guid("887921a6-efbc-4003-9c66-0b07452ee293")
                        },
                        new
                        {
                            Id = new Guid("33d83330-4112-411c-b821-f169cd26cf3b"),
                            Name = "TBS",
                            ParentGenreId = new Guid("887921a6-efbc-4003-9c66-0b07452ee293")
                        },
                        new
                        {
                            Id = new Guid("5eaf93a5-9e3d-4ec5-8f86-221e404639e2"),
                            Name = "Rally",
                            ParentGenreId = new Guid("d2e3bc4b-8e93-4f64-933b-6ecc0ab7c1bc")
                        },
                        new
                        {
                            Id = new Guid("bbb001f3-509d-4606-81fb-3eaf29725258"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("d2e3bc4b-8e93-4f64-933b-6ecc0ab7c1bc")
                        },
                        new
                        {
                            Id = new Guid("f09e8217-fc79-47ad-add4-cb4ff783160c"),
                            Name = "Formula",
                            ParentGenreId = new Guid("d2e3bc4b-8e93-4f64-933b-6ecc0ab7c1bc")
                        },
                        new
                        {
                            Id = new Guid("59c14b59-f750-4483-aa65-04cfc2e28590"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("d2e3bc4b-8e93-4f64-933b-6ecc0ab7c1bc")
                        },
                        new
                        {
                            Id = new Guid("e846e483-d6b1-4f2c-9563-31aa0f0b52cf"),
                            Name = "FPS",
                            ParentGenreId = new Guid("241bd8b3-def4-4248-9255-bdfa8858c438")
                        },
                        new
                        {
                            Id = new Guid("ebec8090-3810-48b6-9fa7-cc651034a810"),
                            Name = "TPS",
                            ParentGenreId = new Guid("241bd8b3-def4-4248-9255-bdfa8858c438")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("daac496d-b203-4a6a-b67a-720ec4ae4483"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("49dbcef8-4605-4cc1-b470-f800c487eb7c"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("a18f33c4-0fa4-4cad-b36f-61022f0da79b"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("bcec7d01-b33d-4490-a01c-cf10520d8aa7"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.PublisherEntity", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
