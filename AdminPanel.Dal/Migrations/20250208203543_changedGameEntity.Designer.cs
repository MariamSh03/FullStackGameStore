// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250208203543_changedGameEntity")]
    partial class ChangedGameEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f78a674a-04dd-4eee-8e68-8d71d7ae6a3b"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("0e2468b0-6256-4b2b-889c-96a8b0a3bf86"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("7218732f-48b4-40b8-a6f2-ca38412c23cf"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("d43e7905-4687-4bdd-bacc-63c217c98278"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("db16a27d-8a39-485e-8ba6-498a33eaaeb0"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("0cdea00c-1854-4eb9-b8ae-58ae868a182d"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("04341f67-6cb0-4e21-ad8f-23ebbe472c38"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("99673268-bc84-420b-81e3-1579fe4924b1"),
                            Name = "RTS",
                            ParentGenreId = new Guid("f78a674a-04dd-4eee-8e68-8d71d7ae6a3b")
                        },
                        new
                        {
                            Id = new Guid("0b16f5b2-b5e6-4a30-9422-0845f75670c8"),
                            Name = "TBS",
                            ParentGenreId = new Guid("f78a674a-04dd-4eee-8e68-8d71d7ae6a3b")
                        },
                        new
                        {
                            Id = new Guid("2345ceb7-6054-4f20-bf55-dd4d60671555"),
                            Name = "Rally",
                            ParentGenreId = new Guid("d43e7905-4687-4bdd-bacc-63c217c98278")
                        },
                        new
                        {
                            Id = new Guid("87a545b1-d122-4f55-9ed2-bf3aa00a6ea0"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("d43e7905-4687-4bdd-bacc-63c217c98278")
                        },
                        new
                        {
                            Id = new Guid("c83856b5-cc5a-4592-8602-39b852631735"),
                            Name = "Formula",
                            ParentGenreId = new Guid("d43e7905-4687-4bdd-bacc-63c217c98278")
                        },
                        new
                        {
                            Id = new Guid("18f3a7fd-6153-4307-8767-d726418a05da"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("d43e7905-4687-4bdd-bacc-63c217c98278")
                        },
                        new
                        {
                            Id = new Guid("08976868-9a24-4151-9ebd-74a831fbc601"),
                            Name = "FPS",
                            ParentGenreId = new Guid("db16a27d-8a39-485e-8ba6-498a33eaaeb0")
                        },
                        new
                        {
                            Id = new Guid("67bf4797-685c-4e31-ac8e-1bc9e804aeff"),
                            Name = "TPS",
                            ParentGenreId = new Guid("db16a27d-8a39-485e-8ba6-498a33eaaeb0")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01ac193e-6bd2-43f0-9087-38c5b9b3251e"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("a360872e-3f94-494e-bdda-826c95c8efbe"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("9b00c04c-be18-4259-8d2e-292648901711"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("2d252d62-7deb-41e1-a948-46b8a1f058ab"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublisherEntity");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.PublisherEntity", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
