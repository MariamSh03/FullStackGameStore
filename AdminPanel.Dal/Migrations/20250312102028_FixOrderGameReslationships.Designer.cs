// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250312102028_FixOrderGameReslationships")]
    partial class FixOrderGameReslationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f45ab7c-0d81-4642-bdc9-7407297eff8e"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("75da4cb3-ba16-484d-80e1-0b422128da40"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("96fb31b7-5b80-43bf-87b2-22804a30648e"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("a04ccd99-70fb-4e16-9b5f-c3d103fea09a"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("9eb241c0-6b2e-4bd5-9748-c371db66afd1"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("95b3ee92-a81c-4391-b832-ccd4ddd49970"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("532e0b70-4523-4490-ba46-6b216232eb23"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("7262a5f6-4b44-4222-ad58-0b3c88c2353d"),
                            Name = "RTS",
                            ParentGenreId = new Guid("9f45ab7c-0d81-4642-bdc9-7407297eff8e")
                        },
                        new
                        {
                            Id = new Guid("6af88aea-5fe3-4640-9270-b738b9cfeac6"),
                            Name = "TBS",
                            ParentGenreId = new Guid("9f45ab7c-0d81-4642-bdc9-7407297eff8e")
                        },
                        new
                        {
                            Id = new Guid("55d4da04-cfc0-477d-a48e-6385174690f4"),
                            Name = "Rally",
                            ParentGenreId = new Guid("a04ccd99-70fb-4e16-9b5f-c3d103fea09a")
                        },
                        new
                        {
                            Id = new Guid("acb7bc68-553d-4112-83a0-cc790d954a98"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("a04ccd99-70fb-4e16-9b5f-c3d103fea09a")
                        },
                        new
                        {
                            Id = new Guid("4eb95111-b8e8-4f89-bf26-95255bece679"),
                            Name = "Formula",
                            ParentGenreId = new Guid("a04ccd99-70fb-4e16-9b5f-c3d103fea09a")
                        },
                        new
                        {
                            Id = new Guid("c3077886-4d17-444e-912c-0e410f2332c6"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("a04ccd99-70fb-4e16-9b5f-c3d103fea09a")
                        },
                        new
                        {
                            Id = new Guid("bcbaa995-55b5-410e-82bf-27ae0efec6b4"),
                            Name = "FPS",
                            ParentGenreId = new Guid("9eb241c0-6b2e-4bd5-9748-c371db66afd1")
                        },
                        new
                        {
                            Id = new Guid("2d365341-7b45-464e-8058-0623d96f9091"),
                            Name = "TPS",
                            ParentGenreId = new Guid("9eb241c0-6b2e-4bd5-9748-c371db66afd1")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderGameEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderGames");
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("134cebba-c4df-4b6c-a085-177de998be29"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("4d5dfb11-d358-47f8-b9bb-a326d8a95daa"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("e5269c77-72d1-40ef-8175-03f038c56c1d"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("05ded520-6e1c-4279-b552-33d8f46fdeb3"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.OrderGameEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.OrderEntity", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
