// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250211190859_RenamePublisherEntityTable")]
    partial class RenamePublisherEntityTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28222329-9745-49fd-ab89-423c00a0c6d3"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("a0d25ce7-0bd0-43fd-8c62-c60c2bf8761e"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("e65f4abe-00f8-4695-bc38-fd5a882cbdd4"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("17821d7c-03a8-44aa-a133-f72a011f022a"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("336b2ff0-01c0-417a-9db7-571fc7100522"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("64cd5e25-c9d0-4603-b645-e881635e1855"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("b09a3bb5-2408-4810-917f-c11b851c923f"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("45dc3091-46c3-4624-94a2-6448caaf40ff"),
                            Name = "RTS",
                            ParentGenreId = new Guid("28222329-9745-49fd-ab89-423c00a0c6d3")
                        },
                        new
                        {
                            Id = new Guid("e7d8e3e0-4682-432d-b039-bd6987a1fef7"),
                            Name = "TBS",
                            ParentGenreId = new Guid("28222329-9745-49fd-ab89-423c00a0c6d3")
                        },
                        new
                        {
                            Id = new Guid("68712dd6-d179-465c-8745-7564d0b16e79"),
                            Name = "Rally",
                            ParentGenreId = new Guid("17821d7c-03a8-44aa-a133-f72a011f022a")
                        },
                        new
                        {
                            Id = new Guid("52a98fc2-7d3d-41f7-9455-0af0a4c85147"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("17821d7c-03a8-44aa-a133-f72a011f022a")
                        },
                        new
                        {
                            Id = new Guid("3e516553-dbbd-480f-9ec3-70d86ea0ac85"),
                            Name = "Formula",
                            ParentGenreId = new Guid("17821d7c-03a8-44aa-a133-f72a011f022a")
                        },
                        new
                        {
                            Id = new Guid("ea6f1cdc-3541-4e6d-97b5-d149f3967f19"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("17821d7c-03a8-44aa-a133-f72a011f022a")
                        },
                        new
                        {
                            Id = new Guid("0f970552-0bc0-4224-8d61-d16992a34f75"),
                            Name = "FPS",
                            ParentGenreId = new Guid("336b2ff0-01c0-417a-9db7-571fc7100522")
                        },
                        new
                        {
                            Id = new Guid("6749861a-4247-4bb5-90f7-0404a0c3dd5c"),
                            Name = "TPS",
                            ParentGenreId = new Guid("336b2ff0-01c0-417a-9db7-571fc7100522")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0765f292-7dc3-4635-b49b-a78161245327"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("8008c5a5-b846-426c-b058-82c68ebc5634"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("f88014d9-c265-4652-927b-dab01ae7d5ed"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("3b3791d5-9e7c-4b4c-b3e5-62aa5e656218"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PublisherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.PublisherEntity", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
